{"version":3,"sources":["Components/AddCategory.js","Helpers/GetGifs.js","Components/GifCard.js","Components/Spinner/Spinner.js","Components/GifContainer.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","categories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","className","placeholder","value","onChange","target","getGifs","category","a","URL","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifCard","image","src","alt","style","width","height","Spinner","GifContainer","loading","setImages","useEffect","then","useFetchGifs","key","GifExpertApp","setCategories","ReactDOM","render","document","getElementById"],"mappings":"0NAGaA,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAAgB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAYzC,OACI,0BAAMC,SARW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAW,SAAAA,GAAU,OAAKE,GAAL,mBAAmBF,OACxCG,EAAc,OAKd,2BACIM,KAAK,OACLC,UAAU,qBACVC,YAAY,oCACZC,MAAOV,EACPW,SAjBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,Y,uBCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QARvB,kBAYZL,GAZY,4CAAH,sDCEPQ,EAAU,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAErB,OACI,yBAAKvB,UAAU,mEACZ,yBAAKA,UAAU,oBACV,yBAAKwB,IAAKD,EAAMJ,IAAKnB,UAAU,eAAeyB,IAAKF,EAAML,MAAOQ,MAAO,CAACC,MAAO,OAAQC,OAAQ,WAC/F,yBAAK5B,UAAU,YAAY0B,MAAO,CAACE,OAAQ,QACvC,wBAAI5B,UAAU,cAAcuB,EAAML,WCNzCW,G,MAAU,WACnB,OACI,yBAAK7B,UAAU,cCAV8B,EAAe,SAAC,GAAgB,IAAD,ECFhB,SAACxB,GAAc,IAAD,EACVf,mBAAS,CACjCsB,KAAM,GACNkB,SAAS,IAHyB,mBAC/BX,EAD+B,KACvBY,EADuB,KActC,OARAC,qBAAU,WACN5B,EAAQC,GACF4B,MAAK,SAACpB,GAAD,OAAUkB,EAAU,CACtBnB,KAAMC,EACNiB,SAAS,SAEpB,CAACzB,IAEIc,EDX0Be,CADO,EAAd7B,UACbc,EAD2B,EACjCP,KAAckB,EADmB,EACnBA,QASrB,OACI,yBAAK/B,UAAU,YAEP+B,EAAU,kBAAC,EAAD,MAVXX,EAAOL,KAAI,SAACC,GAAD,OACd,kBAAC,EAAD,CACIoB,IAAKpB,EAAIC,GACTM,MAAOP,SEPVqB,EAAe,WAAO,IAAD,EACM9C,mBAAS,IADf,mBACvBD,EADuB,KACXgD,EADW,KAuB9B,OACI,yBAAKtC,UAAU,kBACX,yBAAKA,UAAU,4BACX,4CACA,kBAAC,EAAD,CAAaV,WAAYgD,KAE7B,6BAGIhD,EAAWQ,OAAS,EA7BrBR,EACFyB,KAAI,SAACT,GAAD,OACL,yBACI8B,IAAK9B,EACLN,UAAU,iCACV,4BAAKM,GACL,kBAAC,EAAD,CACI8B,IAAK9B,EACLA,SAAUA,QAOf,yBAAKN,UAAU,eAClB,wBAAIA,UAAU,qBAAd,gCACA,wBAAIA,UAAU,eAAd,kC,YChBZuC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.cc8c68ba.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({categories}) => {\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length > 0) {\n            categories(categories => [inputValue,...categories]);\n            setInputValue('');\n        }\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                className=\"form-control w-100\"\n                placeholder=\"Ingresa el nombre de la categoria\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    categories : PropTypes.func.isRequired,\n}\n\n\n\n","export const getGifs = async (category) => {\n    const URL = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=4jPSVS5G2RGwI8VvPd5rTOixguCirx2w`;\n    const resp = await fetch(URL);\n    const { data } = await resp.json();\n    const gifs = data.map((img) => {\n        return { \n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        }\n    }\n    );\n    return gifs;\n}","import React from 'react'\n\nexport const GifCard = ({image}) => {\n    \n    return (\n        <div className=\"col-12 col-md-6 col-lg-4 mt-2 animate__animated animate__fadeIn\">\n           <div className=\"card text-center\">\n                <img src={image.url} className=\"card-img-top\" alt={image.title} style={{width: '100%', height: '200px'}}/>\n                <div className=\"card-body\" style={{height: '7em'}}>\n                    <h5 className=\"card-title\">{image.title}</h5>\n                </div>\n            </div> \n        </div>\n        \n    )\n}\n","import React from 'react';\nimport './Spinner.css';\n\nexport const Spinner = () => {\n    return (\n        <div className=\"spinner\"></div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../Hooks/useFetchGifs';\nimport {GifCard} from './GifCard';\nimport { Spinner } from './Spinner/Spinner';\n\nexport const GifContainer = ({category}) => {\n    const {data: images, loading} =  useFetchGifs(category);\n    const renderCards = () => {\n        return images.map((img) => (\n            <GifCard \n                key={img.id}\n                image={img}\n            />\n        ))\n    }\n    return (\n        <div className=\"row mb-3\">\n            {\n                loading ? <Spinner/> : renderCards()\n            }\n        </div>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../Helpers/GetGifs\";\n\nexport const useFetchGifs = (category) => {\n    const [images, setImages] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect(()=>{\n        getGifs(category)\n             .then((gifs) => setImages({\n                 data: gifs,\n                 loading: false\n             }));\n    },[category]);\n\n    return images;\n}","import React, {useState} from 'react';\nimport { AddCategory } from './Components/AddCategory';\nimport { GifContainer } from './Components/GifContainer';\n\nexport const GifExpertApp = () => {\n    const [categories, setCategories] = useState([]);\n    const renderContainerCategory = () => {\n        return categories\n            .map((category) => (\n            <div \n                key={category}\n                className=\"text-center font-weight-light\">\n                <h3>{category}</h3>\n                <GifContainer  \n                    key={category}\n                    category={category} \n                />\n            </div>\n        )\n    )\n    }\n    const renderEmpty = () => {\n        return <div className=\"text-center\"> \n            <h1 className=\"font-weight-light\">No has buscado ningún gif</h1>\n            <h5 className=\"font-italic\">¡Vamos! Busca el primero</h5>\n        </div>\n    }\n    return(\n        <div className=\"container py-3\">\n            <div className=\"sticky-top bg-white pb-2\">\n                <h2>GifExpertApp</h2>\n                <AddCategory categories={setCategories} />\n            </div>\n            <hr></hr>\n            \n            {\n                categories.length > 0 ? renderContainerCategory() : renderEmpty()\n                \n            }\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n// #region CSS\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n// #endregion\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}